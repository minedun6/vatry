<?php

namespace AppBundle\Repository;

use Doctrine\ORM\EntityRepository;
use AppBundle\Entity\Flight;

/**
 * FlightRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class FlightRepository extends EntityRepository
{
    use CountTrait;

    /**
     * @param  $dateTime
     * @return Flight[]
     *
     */
    public function getDestinationsByDate($dateTime = null, $dest = null)
    {

        $vatry = 'Vatry';
        $qb = $this->createQueryBuilder('f')
            ->where("f.fromLocation = :vatry ")
            ->setParameter('vatry', $vatry);

        if ($dest) {
            $qb->andWhere('f.country like :country')
                ->setParameter('country', "%" . $dest . "%");
        }

        if ($dateTime) {
            $qb
                ->andWhere('f.time like :like')
                ->setParameter('like', $dateTime . "%");
        }

        return $qb->getQuery()->getResult();
    }

    /**
     * @param $dateTime
     * @return Flight[]
     *
     */
    public function getProvenancesByDate($dateTime = null, $prov = null)
    {

        $vatry = 'Vatry';
        $qb = $this->createQueryBuilder('f')
            ->where("f.toLocation = :vatry ")
            ->setParameter('vatry', $vatry);

        if ($prov) {
            $qb->andWhere('f.country like :country')
                ->setParameter('country', "%" . $prov . "%");
        }

        if ($dateTime) {
            $qb
                ->andWhere('f.time like :like')
                ->setParameter('like', $dateTime . "%");
        }

        return $qb->getQuery()->getResult();
    }

    public function getProvenancesByDateAndFlight($dateTime = null, $flight)
    {

        $vatry = 'Vatry';
        $qb = $this->createQueryBuilder('f')
            ->where("f.toLocation = :vatry ")
            ->setParameter('vatry', $vatry)
            ->andWhere('f.num = :flight')
            ->setParameter('flight', $flight)
            ->andWhere('f.time like :like')
            ->setParameter('like', $dateTime . "%");

        return $qb->getQuery()->getResult();
    }

    public function getDestinationsByDateAndFlight($dateTime, $flight)
    {

        $vatry = 'Vatry';

        $qb = $this->createQueryBuilder('f')
            ->where("f.fromLocation = :vatry ")
            ->setParameter('vatry', $vatry)
            ->andWhere('f.num = :flight')
            ->setParameter('flight', $flight)
            ->andWhere('f.time like :like')
            ->setParameter('like', $dateTime . "%");

        return $qb->getQuery()->getResult();
    }

    public function getFlight($number)
    {
        $qb = $this->createQueryBuilder('f')
            ->where('f.num = :cd')
            ->setParameter('cd', $number);
        return $qb->getQuery()->getResult();
    }

    /**
     * @param  $dateTime
     * @return Flight[]
     *
     */
    public function getFlightsByDate($dateTime = null)
    {

        $qb = $this->createQueryBuilder('f')
            ->where('f.time like :like')
            ->setParameter('like', $dateTime . "%");

        return $qb->getQuery()->getResult();
    }

    public function getFlightByDateAndNumber($num, $date)
    {
        $qb = $this->createQueryBuilder('f')
            ->where('f.time like :date')
            ->andWhere('f.num = :num')
            ->setParameter('date', $date . '%')
            ->setParameter('num', $num);
        $result = $qb->getQuery()->getResult();
        if (sizeof($result) == 0) {
            return null;
        }

        return $result[0];
    }

    public function getDestinationForParisAirpot($date = null, $destination)
    {
        $toLocations = ['Nice', 'Malaga'];
        $vatry = 'Vatry';
        $qb = $this->createQueryBuilder('f')
            ->where("f.fromLocation = :vatry ")
            ->setParameter('vatry', $vatry);

        if ($destination) {
            $qb->andWhere('f.toLocation in (:locations)')
                ->setParameter('locations', $toLocations);
        }

        if ($date) {
            $qb
                ->andWhere('f.time like :like')
                ->setParameter('like', $date . "%");
        }

        return $qb->getQuery()->getResult();
    }

    public function getProvenanceForParisAirport($date = null, $provenance)
    {
        $fromLocations = ['Nice', 'Malaga'];
        $vatry = 'Vatry';
        $qb = $this->createQueryBuilder('f')
            ->where("f.toLocation = :vatry ")
            ->setParameter('vatry', $vatry);

        if ($provenance) {
            $qb->andWhere('f.fromLocation in (:locations)')
                ->setParameter('locations', $fromLocations);
        }

        if ($date) {
            $qb
                ->andWhere('f.time like :like')
                ->setParameter('like', $date . "%");
        }

        return $qb->getQuery()->getResult();
    }

    public function getDestinationForLocations($date = null, $destination ,$toLocations)
    {
        //$toLocations = ['Porto', 'Oran'];
        $vatry = 'Vatry';
        $qb = $this->createQueryBuilder('f')
            ->where("f.fromLocation = :vatry ")
            ->setParameter('vatry', $vatry);

        if ($destination) {
            $qb->andWhere('f.toLocation in (:locations)')
                ->setParameter('locations', $toLocations);
        }

        if ($date) {
            $qb
                ->andWhere('f.time like :like')
                ->setParameter('like', $date . "%");
        }

        return $qb->getQuery()->getResult();
    }

    public function getProvenanceForLocations($date = null, $provenance, $fromLocations)
    {
        //$fromLocations = ['Nice', 'Malaga'];
        $vatry = 'Vatry';
        $qb = $this->createQueryBuilder('f')
            ->where("f.toLocation = :vatry ")
            ->setParameter('vatry', $vatry);

        if ($provenance) {
            $qb->andWhere('f.fromLocation in (:locations)')
                ->setParameter('locations', $fromLocations);
        }

        if ($date) {
            $qb
                ->andWhere('f.time like :like')
                ->setParameter('like', $date . "%");
        }

        return $qb->getQuery()->getResult();
    }

}
